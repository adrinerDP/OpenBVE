# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

jobs:
- job: WindowsBuild
  displayName: 'Build on Windows (sln)'
  pool:
    vmImage: 'windows-latest'

  variables:
    solution: 'OpenBVE.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

### Windows build I believe works
### Apple build is WIP, not tested yet

- job: AppleMakeBuild
  displayName: 'Build on Apple OS-X (makefile)'
  pool:
    vmImage: 'macos-10.14'

  variables:
    solution: 'OpenBVE.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@1
  - script: make publish 
  - task: CopyFilesOverSSH@0
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
     sshEndpoint: 'BuildServer'
     contents: \*.dmg
     targetFolder: '/var/www/vps.bvecornwall.co.uk/public/OpenBVE/Builds/'
     overwrite: true

### Linux makefile build

- job: LinuxMakeBuild
  displayName: 'Build on Linux (makefile)'
  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    solution: 'OpenBVE.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@1
  - script: make publish 
  - task: CopyFilesOverSSH@0
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
     sshEndpoint: 'BuildServer'
     contents: \*.zip
     targetFolder: '/var/www/vps.bvecornwall.co.uk/public/OpenBVE/Builds/'
     overwrite: true